// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: mng_allocation.proto

package clusterpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AllocResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AllocResponseStatus) Reset() {
	*x = AllocResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocResponseStatus) ProtoMessage() {}

func (x *AllocResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocResponseStatus.ProtoReflect.Descriptor instead.
func (*AllocResponseStatus) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{0}
}

func (x *AllocResponseStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AllocResponseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Applicant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HolderId  string `protobuf:"bytes,1,opt,name=holderId,proto3" json:"holderId,omitempty"`
	RequestId string `protobuf:"bytes,2,opt,name=requestId,proto3" json:"requestId,omitempty"`
}

func (x *Applicant) Reset() {
	*x = Applicant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Applicant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Applicant) ProtoMessage() {}

func (x *Applicant) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Applicant.ProtoReflect.Descriptor instead.
func (*Applicant) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{1}
}

func (x *Applicant) GetHolderId() string {
	if x != nil {
		return x.HolderId
	}
	return ""
}

func (x *Applicant) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Zone   string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	Rack   string `protobuf:"bytes,3,opt,name=rack,proto3" json:"rack,omitempty"`
	Host   string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Location) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Location) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *Location) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type Excluded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *Excluded) Reset() {
	*x = Excluded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Excluded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Excluded) ProtoMessage() {}

func (x *Excluded) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Excluded.ProtoReflect.Descriptor instead.
func (*Excluded) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{3}
}

func (x *Excluded) GetHosts() []string {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch     string `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
	Purpose  string `protobuf:"bytes,2,opt,name=purpose,proto3" json:"purpose,omitempty"`
	DiskType string `protobuf:"bytes,3,opt,name=diskType,proto3" json:"diskType,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{4}
}

func (x *Filter) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Filter) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Filter) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

type ComputeRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuCores int32 `protobuf:"varint,1,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	Memory   int32 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *ComputeRequirement) Reset() {
	*x = ComputeRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeRequirement) ProtoMessage() {}

func (x *ComputeRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeRequirement.ProtoReflect.Descriptor instead.
func (*ComputeRequirement) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{5}
}

func (x *ComputeRequirement) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *ComputeRequirement) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type DiskRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NeedDisk bool   `protobuf:"varint,1,opt,name=needDisk,proto3" json:"needDisk,omitempty"`
	Capacity int32  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"` // Reserved, not used by now
	DiskType string `protobuf:"bytes,3,opt,name=diskType,proto3" json:"diskType,omitempty"`  // Reserved, not used by now
}

func (x *DiskRequirement) Reset() {
	*x = DiskRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskRequirement) ProtoMessage() {}

func (x *DiskRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskRequirement.ProtoReflect.Descriptor instead.
func (*DiskRequirement) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{6}
}

func (x *DiskRequirement) GetNeedDisk() bool {
	if x != nil {
		return x.NeedDisk
	}
	return false
}

func (x *DiskRequirement) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *DiskRequirement) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

type PortRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start   int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End     int32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	PortCnt int32 `protobuf:"varint,3,opt,name=portCnt,proto3" json:"portCnt,omitempty"`
}

func (x *PortRequirement) Reset() {
	*x = PortRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortRequirement) ProtoMessage() {}

func (x *PortRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortRequirement.ProtoReflect.Descriptor instead.
func (*PortRequirement) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{7}
}

func (x *PortRequirement) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PortRequirement) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PortRequirement) GetPortCnt() int32 {
	if x != nil {
		return x.PortCnt
	}
	return 0
}

type Requirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exclusive  bool                `protobuf:"varint,1,opt,name=exclusive,proto3" json:"exclusive,omitempty"`
	DiskReq    *DiskRequirement    `protobuf:"bytes,2,opt,name=diskReq,proto3" json:"diskReq,omitempty"`
	ComputeReq *ComputeRequirement `protobuf:"bytes,3,opt,name=computeReq,proto3" json:"computeReq,omitempty"`
	PortReq    []*PortRequirement  `protobuf:"bytes,4,rep,name=portReq,proto3" json:"portReq,omitempty"`
}

func (x *Requirement) Reset() {
	*x = Requirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Requirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requirement) ProtoMessage() {}

func (x *Requirement) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requirement.ProtoReflect.Descriptor instead.
func (*Requirement) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{8}
}

func (x *Requirement) GetExclusive() bool {
	if x != nil {
		return x.Exclusive
	}
	return false
}

func (x *Requirement) GetDiskReq() *DiskRequirement {
	if x != nil {
		return x.DiskReq
	}
	return nil
}

func (x *Requirement) GetComputeReq() *ComputeRequirement {
	if x != nil {
		return x.ComputeReq
	}
	return nil
}

func (x *Requirement) GetPortReq() []*PortRequirement {
	if x != nil {
		return x.PortReq
	}
	return nil
}

type AllocRequirement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location     *Location    `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	HostExcluded *Excluded    `protobuf:"bytes,2,opt,name=hostExcluded,proto3" json:"hostExcluded,omitempty"`
	HostFilter   *Filter      `protobuf:"bytes,3,opt,name=hostFilter,proto3" json:"hostFilter,omitempty"`
	Require      *Requirement `protobuf:"bytes,4,opt,name=require,proto3" json:"require,omitempty"`
	Strategy     int32        `protobuf:"varint,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Count        int32        `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AllocRequirement) Reset() {
	*x = AllocRequirement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocRequirement) ProtoMessage() {}

func (x *AllocRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocRequirement.ProtoReflect.Descriptor instead.
func (*AllocRequirement) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{9}
}

func (x *AllocRequirement) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *AllocRequirement) GetHostExcluded() *Excluded {
	if x != nil {
		return x.HostExcluded
	}
	return nil
}

func (x *AllocRequirement) GetHostFilter() *Filter {
	if x != nil {
		return x.HostFilter
	}
	return nil
}

func (x *AllocRequirement) GetRequire() *Requirement {
	if x != nil {
		return x.Require
	}
	return nil
}

func (x *AllocRequirement) GetStrategy() int32 {
	if x != nil {
		return x.Strategy
	}
	return 0
}

func (x *AllocRequirement) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AllocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Applicant *Applicant          `protobuf:"bytes,1,opt,name=applicant,proto3" json:"applicant,omitempty"`
	Requires  []*AllocRequirement `protobuf:"bytes,2,rep,name=requires,proto3" json:"requires,omitempty"`
}

func (x *AllocRequest) Reset() {
	*x = AllocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocRequest) ProtoMessage() {}

func (x *AllocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocRequest.ProtoReflect.Descriptor instead.
func (*AllocRequest) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{10}
}

func (x *AllocRequest) GetApplicant() *Applicant {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *AllocRequest) GetRequires() []*AllocRequirement {
	if x != nil {
		return x.Requires
	}
	return nil
}

type DiskResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId   string `protobuf:"bytes,1,opt,name=diskId,proto3" json:"diskId,omitempty"`
	DiskName string `protobuf:"bytes,2,opt,name=diskName,proto3" json:"diskName,omitempty"`
	Path     string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Capacity int32  `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *DiskResource) Reset() {
	*x = DiskResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskResource) ProtoMessage() {}

func (x *DiskResource) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskResource.ProtoReflect.Descriptor instead.
func (*DiskResource) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{11}
}

func (x *DiskResource) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *DiskResource) GetDiskName() string {
	if x != nil {
		return x.DiskName
	}
	return ""
}

func (x *DiskResource) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DiskResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DiskResource) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type PortResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int32   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int32   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Ports []int32 `protobuf:"varint,3,rep,packed,name=ports,proto3" json:"ports,omitempty"`
}

func (x *PortResource) Reset() {
	*x = PortResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortResource) ProtoMessage() {}

func (x *PortResource) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortResource.ProtoReflect.Descriptor instead.
func (*PortResource) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{12}
}

func (x *PortResource) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PortResource) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PortResource) GetPorts() []int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

type HostResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reqseq     int32               `protobuf:"varint,1,opt,name=reqseq,proto3" json:"reqseq,omitempty"`
	Location   *Location           `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	HostId     string              `protobuf:"bytes,3,opt,name=hostId,proto3" json:"hostId,omitempty"`
	HostName   string              `protobuf:"bytes,4,opt,name=hostName,proto3" json:"hostName,omitempty"`
	HostIp     string              `protobuf:"bytes,5,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	UserName   string              `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	Passwd     string              `protobuf:"bytes,7,opt,name=passwd,proto3" json:"passwd,omitempty"`
	ComputeRes *ComputeRequirement `protobuf:"bytes,8,opt,name=computeRes,proto3" json:"computeRes,omitempty"`
	DiskRes    *DiskResource       `protobuf:"bytes,9,opt,name=diskRes,proto3" json:"diskRes,omitempty"`
	PortRes    []*PortResource     `protobuf:"bytes,10,rep,name=portRes,proto3" json:"portRes,omitempty"`
}

func (x *HostResource) Reset() {
	*x = HostResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResource) ProtoMessage() {}

func (x *HostResource) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResource.ProtoReflect.Descriptor instead.
func (*HostResource) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{13}
}

func (x *HostResource) GetReqseq() int32 {
	if x != nil {
		return x.Reqseq
	}
	return 0
}

func (x *HostResource) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *HostResource) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *HostResource) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *HostResource) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *HostResource) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *HostResource) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *HostResource) GetComputeRes() *ComputeRequirement {
	if x != nil {
		return x.ComputeRes
	}
	return nil
}

func (x *HostResource) GetDiskRes() *DiskResource {
	if x != nil {
		return x.DiskRes
	}
	return nil
}

func (x *HostResource) GetPortRes() []*PortResource {
	if x != nil {
		return x.PortRes
	}
	return nil
}

type AllocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs      *AllocResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Results []*HostResource      `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *AllocResponse) Reset() {
	*x = AllocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocResponse) ProtoMessage() {}

func (x *AllocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocResponse.ProtoReflect.Descriptor instead.
func (*AllocResponse) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{14}
}

func (x *AllocResponse) GetRs() *AllocResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *AllocResponse) GetResults() []*HostResource {
	if x != nil {
		return x.Results
	}
	return nil
}

type BatchAllocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchRequests []*AllocRequest `protobuf:"bytes,1,rep,name=batchRequests,proto3" json:"batchRequests,omitempty"`
}

func (x *BatchAllocRequest) Reset() {
	*x = BatchAllocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAllocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAllocRequest) ProtoMessage() {}

func (x *BatchAllocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAllocRequest.ProtoReflect.Descriptor instead.
func (*BatchAllocRequest) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{15}
}

func (x *BatchAllocRequest) GetBatchRequests() []*AllocRequest {
	if x != nil {
		return x.BatchRequests
	}
	return nil
}

type BatchAllocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs           *AllocResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	BatchResults []*AllocResponse     `protobuf:"bytes,2,rep,name=batchResults,proto3" json:"batchResults,omitempty"`
}

func (x *BatchAllocResponse) Reset() {
	*x = BatchAllocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAllocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAllocResponse) ProtoMessage() {}

func (x *BatchAllocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAllocResponse.ProtoReflect.Descriptor instead.
func (*BatchAllocResponse) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{16}
}

func (x *BatchAllocResponse) GetRs() *AllocResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *BatchAllocResponse) GetBatchResults() []*AllocResponse {
	if x != nil {
		return x.BatchResults
	}
	return nil
}

type RecycleRequire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecycleType int32               `protobuf:"varint,1,opt,name=recycleType,proto3" json:"recycleType,omitempty"`
	HolderId    string              `protobuf:"bytes,2,opt,name=holderId,proto3" json:"holderId,omitempty"`
	RequestId   string              `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	HostId      string              `protobuf:"bytes,4,opt,name=hostId,proto3" json:"hostId,omitempty"`
	HostIp      string              `protobuf:"bytes,5,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	ComputeReq  *ComputeRequirement `protobuf:"bytes,6,opt,name=computeReq,proto3" json:"computeReq,omitempty"`
	DiskReq     *DiskResource       `protobuf:"bytes,7,opt,name=diskReq,proto3" json:"diskReq,omitempty"`
	PortReq     []*PortResource     `protobuf:"bytes,8,rep,name=portReq,proto3" json:"portReq,omitempty"`
}

func (x *RecycleRequire) Reset() {
	*x = RecycleRequire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleRequire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleRequire) ProtoMessage() {}

func (x *RecycleRequire) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleRequire.ProtoReflect.Descriptor instead.
func (*RecycleRequire) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{17}
}

func (x *RecycleRequire) GetRecycleType() int32 {
	if x != nil {
		return x.RecycleType
	}
	return 0
}

func (x *RecycleRequire) GetHolderId() string {
	if x != nil {
		return x.HolderId
	}
	return ""
}

func (x *RecycleRequire) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecycleRequire) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *RecycleRequire) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *RecycleRequire) GetComputeReq() *ComputeRequirement {
	if x != nil {
		return x.ComputeReq
	}
	return nil
}

func (x *RecycleRequire) GetDiskReq() *DiskResource {
	if x != nil {
		return x.DiskReq
	}
	return nil
}

func (x *RecycleRequire) GetPortReq() []*PortResource {
	if x != nil {
		return x.PortReq
	}
	return nil
}

type RecycleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecycleReqs []*RecycleRequire `protobuf:"bytes,1,rep,name=RecycleReqs,proto3" json:"RecycleReqs,omitempty"`
}

func (x *RecycleRequest) Reset() {
	*x = RecycleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleRequest) ProtoMessage() {}

func (x *RecycleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleRequest.ProtoReflect.Descriptor instead.
func (*RecycleRequest) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{18}
}

func (x *RecycleRequest) GetRecycleReqs() []*RecycleRequire {
	if x != nil {
		return x.RecycleReqs
	}
	return nil
}

type RecycleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs *AllocResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
}

func (x *RecycleResponse) Reset() {
	*x = RecycleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mng_allocation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleResponse) ProtoMessage() {}

func (x *RecycleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mng_allocation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleResponse.ProtoReflect.Descriptor instead.
func (*RecycleResponse) Descriptor() ([]byte, []int) {
	return file_mng_allocation_proto_rawDescGZIP(), []int{19}
}

func (x *RecycleResponse) GetRs() *AllocResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

var File_mng_allocation_proto protoreflect.FileDescriptor

var file_mng_allocation_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x13, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x09, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x5e, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x68,
	0x6f, 0x73, 0x74, 0x73, 0x22, 0x52, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6e, 0x74, 0x22, 0xb8,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a,
	0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x22, 0xeb, 0x01, 0x0a, 0x10, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x45, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73,
	0x22, 0x86, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x69, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x4c, 0x0a, 0x0c, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x22, 0xd4, 0x02, 0x0a, 0x0c, 0x48, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x73,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x71, 0x73, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x22, 0x5e,
	0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x48,
	0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x02, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x62, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x07,
	0x64, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x44, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x22, 0x43,
	0x0a, 0x0e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x42, 0x1b, 0x5a, 0x19,
	0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x3b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_mng_allocation_proto_rawDescOnce sync.Once
	file_mng_allocation_proto_rawDescData = file_mng_allocation_proto_rawDesc
)

func file_mng_allocation_proto_rawDescGZIP() []byte {
	file_mng_allocation_proto_rawDescOnce.Do(func() {
		file_mng_allocation_proto_rawDescData = protoimpl.X.CompressGZIP(file_mng_allocation_proto_rawDescData)
	})
	return file_mng_allocation_proto_rawDescData
}

var file_mng_allocation_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_mng_allocation_proto_goTypes = []interface{}{
	(*AllocResponseStatus)(nil), // 0: AllocResponseStatus
	(*Applicant)(nil),           // 1: Applicant
	(*Location)(nil),            // 2: Location
	(*Excluded)(nil),            // 3: Excluded
	(*Filter)(nil),              // 4: Filter
	(*ComputeRequirement)(nil),  // 5: ComputeRequirement
	(*DiskRequirement)(nil),     // 6: DiskRequirement
	(*PortRequirement)(nil),     // 7: PortRequirement
	(*Requirement)(nil),         // 8: Requirement
	(*AllocRequirement)(nil),    // 9: AllocRequirement
	(*AllocRequest)(nil),        // 10: AllocRequest
	(*DiskResource)(nil),        // 11: DiskResource
	(*PortResource)(nil),        // 12: PortResource
	(*HostResource)(nil),        // 13: HostResource
	(*AllocResponse)(nil),       // 14: AllocResponse
	(*BatchAllocRequest)(nil),   // 15: BatchAllocRequest
	(*BatchAllocResponse)(nil),  // 16: BatchAllocResponse
	(*RecycleRequire)(nil),      // 17: RecycleRequire
	(*RecycleRequest)(nil),      // 18: RecycleRequest
	(*RecycleResponse)(nil),     // 19: RecycleResponse
}
var file_mng_allocation_proto_depIdxs = []int32{
	6,  // 0: Requirement.diskReq:type_name -> DiskRequirement
	5,  // 1: Requirement.computeReq:type_name -> ComputeRequirement
	7,  // 2: Requirement.portReq:type_name -> PortRequirement
	2,  // 3: AllocRequirement.location:type_name -> Location
	3,  // 4: AllocRequirement.hostExcluded:type_name -> Excluded
	4,  // 5: AllocRequirement.hostFilter:type_name -> Filter
	8,  // 6: AllocRequirement.require:type_name -> Requirement
	1,  // 7: AllocRequest.applicant:type_name -> Applicant
	9,  // 8: AllocRequest.requires:type_name -> AllocRequirement
	2,  // 9: HostResource.location:type_name -> Location
	5,  // 10: HostResource.computeRes:type_name -> ComputeRequirement
	11, // 11: HostResource.diskRes:type_name -> DiskResource
	12, // 12: HostResource.portRes:type_name -> PortResource
	0,  // 13: AllocResponse.rs:type_name -> AllocResponseStatus
	13, // 14: AllocResponse.results:type_name -> HostResource
	10, // 15: BatchAllocRequest.batchRequests:type_name -> AllocRequest
	0,  // 16: BatchAllocResponse.rs:type_name -> AllocResponseStatus
	14, // 17: BatchAllocResponse.batchResults:type_name -> AllocResponse
	5,  // 18: RecycleRequire.computeReq:type_name -> ComputeRequirement
	11, // 19: RecycleRequire.diskReq:type_name -> DiskResource
	12, // 20: RecycleRequire.portReq:type_name -> PortResource
	17, // 21: RecycleRequest.RecycleReqs:type_name -> RecycleRequire
	0,  // 22: RecycleResponse.rs:type_name -> AllocResponseStatus
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_mng_allocation_proto_init() }
func file_mng_allocation_proto_init() {
	if File_mng_allocation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mng_allocation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Applicant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Excluded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Requirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocRequirement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAllocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchAllocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleRequire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mng_allocation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecycleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mng_allocation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mng_allocation_proto_goTypes,
		DependencyIndexes: file_mng_allocation_proto_depIdxs,
		MessageInfos:      file_mng_allocation_proto_msgTypes,
	}.Build()
	File_mng_allocation_proto = out.File
	file_mng_allocation_proto_rawDesc = nil
	file_mng_allocation_proto_goTypes = nil
	file_mng_allocation_proto_depIdxs = nil
}
