syntax = "proto3";

import "common.proto";
import "softwarespec.proto";
import "database.proto";
import "mng_auth.proto";
import "mng_host.proto";
import "mng_allocation.proto";
option go_package = "./../clusterpb/;clusterpb";

service ClusterService {
    // Cluster manager module
    rpc CreateCluster(ClusterCreateReqDTO) returns (ClusterCreateRespDTO);
    rpc QueryCluster(ClusterQueryReqDTO) returns (ClusterQueryRespDTO);
    rpc DeleteCluster(ClusterDeleteReqDTO) returns (ClusterDeleteRespDTO);
    rpc DetailCluster(ClusterDetailReqDTO) returns (ClusterDetailRespDTO);

    rpc ImportData(DataImportRequest) returns (DataImportResponse);
    rpc ExportData(DataExportRequest) returns (DataExportResponse);
    rpc DescribeDataTransport(DataTransportQueryRequest) returns (DataTransportQueryResponse);

    rpc QueryBackupRecord(QueryBackupRequest) returns (QueryBackupResponse);
    rpc CreateBackup(CreateBackupRequest) returns (CreateBackupResponse);
    rpc RecoverCluster(RecoverRequest) returns (RecoverResponse);
    rpc DeleteBackupRecord(DeleteBackupRequest) returns (DeleteBackupResponse);
    rpc SaveBackupStrategy(SaveBackupStrategyRequest) returns (SaveBackupStrategyResponse);
    rpc GetBackupStrategy(GetBackupStrategyRequest) returns (GetBackupStrategyResponse);

    rpc QueryParameters(QueryClusterParametersRequest) returns (QueryClusterParametersResponse);
    rpc SaveParameters(SaveClusterParametersRequest) returns (SaveClusterParametersResponse);

    rpc DescribeDashboard(DescribeDashboardRequest) returns (DescribeDashboardResponse);
    rpc DescribeMonitor(DescribeMonitorRequest) returns (DescribeMonitorResponse);

    // Auth manager module
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse);
    rpc VerifyIdentity(VerifyIdentityRequest) returns (VerifyIdentityResponse);

    // host manager module
    rpc ImportHost(ImportHostRequest) returns (ImportHostResponse);
    rpc ImportHostsInBatch(ImportHostsInBatchRequest) returns (ImportHostsInBatchResponse);
    rpc RemoveHost(RemoveHostRequest) returns (RemoveHostResponse);
    rpc RemoveHostsInBatch(RemoveHostsInBatchRequest) returns (RemoveHostsInBatchResponse);
    rpc ListHost(ListHostsRequest) returns (ListHostsResponse);
    rpc CheckDetails(CheckDetailsRequest) returns (CheckDetailsResponse);
    rpc AllocHosts(AllocHostsRequest) returns (AllocHostResponse);
    rpc GetFailureDomain(GetFailureDomainRequest) returns (GetFailureDomainResponse);
    rpc AllocResourcesInBatch(BatchAllocRequest) returns (BatchAllocResponse);
    rpc RecycleResources(RecycleRequest) returns (RecycleResponse);
    rpc UpdateHostStatus(UpdateHostStatusRequest) returns (UpdateHostStatusResponse);
	rpc ReserveHost(ReserveHostRequest) returns (ReserveHostResponse);
    rpc GetRegions(GetRegionsRequest) returns (GetRegionsResponse);

    // task manager
    rpc ListFlows(ListFlowsRequest) returns (ListFlowsResponse);
}

message ClusterCreateReqDTO {
    OperatorDTO operator = 1;
    ClusterBaseInfoDTO cluster = 2;
    repeated ClusterNodeDemandDTO demands = 3;
}

message ClusterCreateRespDTO {
    ResponseStatusDTO respStatus = 1;
    string clusterId = 2;
    ClusterBaseInfoDTO baseInfo = 3;
    DisplayStatusDTO clusterStatus = 4;
}

message ClusterQueryReqDTO {
    OperatorDTO operator = 1;
    PageDTO pageReq = 2;
    string clusterId = 3;
    string clusterName = 4;
    string clusterType = 5;
    string clusterStatus = 6;
    string clusterTag = 7;
}

message ClusterQueryRespDTO {
    ResponseStatusDTO respStatus = 1;
    PageDTO page = 2;
    repeated ClusterDisplayDTO clusters = 3;
}

message ClusterDeleteReqDTO {
    OperatorDTO operator = 1;
    string clusterId = 2;
}

message ClusterDeleteRespDTO {
    ResponseStatusDTO respStatus = 1;
    string clusterId = 2;
    DisplayStatusDTO clusterStatus = 3;
}

message ClusterDetailReqDTO {
    OperatorDTO operator = 1;
    string clusterId = 2;
}

message ClusterDetailRespDTO {
    ResponseStatusDTO respStatus = 1;
    ClusterDisplayDTO displayInfo = 2;
    ClusterMaintenanceDTO maintenanceInfo = 3;
    repeated ComponentInstanceDTO components = 4;
}

message ClusterMaintenanceDTO {
    string maintainTaskCron = 1;
}

message ComponentInstanceDTO {
    ComponentBaseInfoDTO baseInfo = 1;
    repeated ComponentNodeDisplayInfoDTO nodes = 2;
}

message ComponentNodeDisplayInfoDTO {
    string nodeId = 1;
    string version = 2;
    string status = 3;
    ComponentNodeInstanceDTO instance = 4;
    ComponentNodeUsageDTO usages = 5;
}

message ComponentNodeUsageDTO {
    float ioUtil = 1;
    repeated float iops = 2;
    UsageDTO cpuUsage = 3;
    UsageDTO memoryUsage = 4;
    UsageDTO storegeUsage = 5;
}

message ComponentNodeInstanceDTO {
    string hostId = 1;
    int32 port = 2;
    ComponentNodeRoleDTO role = 3;

    SpecBaseInfoDTO spec = 4;
    ZoneBaseInfoDTO zone = 5;
}

message ZoneBaseInfoDTO {
    string zoneCode = 1;
    string zoneName = 2;
}

message SpecBaseInfoDTO {
    string specCode = 1;
    string specName = 2;
}

message ComponentNodeRoleDTO {
    string roleCode = 1;
    string roleName = 2;
}

message ComponentBaseInfoDTO {
    string componentType = 1;
    string componentName = 2;
}

message DisplayStatusDTO {
    string statusCode = 1;
    string statusName = 2;
    int32 inProcessFlowId = 3;
    int64 createTime = 4;
    int64 updateTime = 5;
    int64 deleteTime = 6;
}

message RecoverInfoDTO {
    string sourceClusterId = 1;
    int64 backupRecordId = 2;
}

message ClusterBaseInfoDTO {
    string clusterName = 1;
    string dbPassword = 2;
    ClusterTypeDTO clusterType = 3;
    ClusterVersionDTO clusterVersion = 4;
    repeated string tags = 5;
    bool tls = 6;
    RecoverInfoDTO recoverInfo = 7;
}

message ClusterNodeDemandDTO {
    string componentType = 1;
    int32 totalNodeCount = 2;
    repeated DistributionItemDTO items = 3;
}

message DistributionItemDTO {
    string zoneCode = 1;
    string specCode = 2;
    int32  count = 3;
}

message ClusterDisplayDTO {
    string clusterId = 1;
    ClusterBaseInfoDTO baseInfo = 2;
    DisplayStatusDTO status = 3;
    ClusterInstanceDTO instances = 4;
}

message ClusterInstanceDTO {
    repeated string intranetConnectAddresses = 1;
    repeated string extranetConnectAddresses = 2;
    repeated string whitelist = 3;
    repeated int64 portList = 4;
    UsageDTO diskUsage = 5;
    UsageDTO cpuUsage = 6;
    UsageDTO memoryUsage = 7;
    UsageDTO storageUsage = 8;
    UsageDTO backupFileUsage = 9;
}

message BackupRecordDTO {
    int64 id = 1;
    string clusterId = 2;
    int64 startTime = 3;
    int64 endTime = 4;
    string backupMethod = 5;
    string backupType = 6;
    string backupMode = 7;
    OperatorDTO operator = 8;
    float size = 9;
    DisplayStatusDTO displayStatus = 10;
    string filePath = 11;
}

message QueryBackupRequest {
    OperatorDTO operator = 1;
    string clusterId = 2;
    int64 startTime = 3;
    int64 endTime = 4;
    PageDTO page = 5;
}

message QueryBackupResponse {
    ResponseStatusDTO status = 1;
    repeated BackupRecordDTO backupRecords= 2;
    PageDTO page = 3;
}

message CreateBackupRequest {
    string clusterId = 1;
    string backupType = 2;
    string backupMethod = 3;
    string filePath = 4;
    OperatorDTO operator = 5;
}

message CreateBackupResponse {
    ResponseStatusDTO status = 1;
    BackupRecordDTO backupRecord = 2;
}

message RecoverRequest {
    OperatorDTO operator = 1;
    ClusterBaseInfoDTO cluster = 2;
    repeated ClusterNodeDemandDTO demands = 3;
}

message RecoverResponse {
   ResponseStatusDTO respStatus = 1;
   string clusterId = 2;
   ClusterBaseInfoDTO baseInfo = 3;
   DisplayStatusDTO clusterStatus = 4;
}

message BackupRecoverRecordDTO {
    int64 id = 1;
    string clusterId = 2;
    int64 backupRecordId = 3;
    int64 startTime = 4;
    int64 endTime = 5;
    DisplayStatusDTO displayStatus = 6;
}

message DeleteBackupRequest {
    string clusterId = 1;
    OperatorDTO operator = 2;
    int64 backupRecordId = 3;
}

message DeleteBackupResponse {
    ResponseStatusDTO status = 1;
}

message BackupStrategy {
    string clusterId = 1;
    string backupDate = 2;
    string period = 3;
    int64 NextBackupTime = 4;
}

message SaveBackupStrategyRequest {
    OperatorDTO operator = 1;
    BackupStrategy strategy = 2;
}

message SaveBackupStrategyResponse {
    ResponseStatusDTO status = 1;
}

message GetBackupStrategyRequest {
    string clusterId = 1;
    OperatorDTO operator = 2;
}

message GetBackupStrategyResponse {
    ResponseStatusDTO status = 1;
    BackupStrategy strategy = 2;
}

message QueryClusterParametersRequest {
    string clusterId = 1;
    OperatorDTO operator = 2;
}

message QueryClusterParametersResponse {
    ResponseStatusDTO status = 1;
    string clusterId = 2;
    string parametersJson = 3;
}

message SaveClusterParametersRequest {
    string clusterId = 1;
    string parametersJson = 2;
    OperatorDTO operator = 3;
}

message SaveClusterParametersResponse {
    ResponseStatusDTO status = 1;
    DisplayStatusDTO displayInfo = 2;
}

message DescribeDashboardRequest {
    string clusterId = 1;
    OperatorDTO operator = 2;
}

message DescribeDashboardResponse {
    ResponseStatusDTO status = 1;
    string clusterId = 2;
    string url = 3;
    string token = 4;
}

message DescribeMonitorRequest {
    string clusterId = 1;
    OperatorDTO operator = 2;
}

message DescribeMonitorResponse {
    ResponseStatusDTO status = 1;
    string clusterId = 2;
    string alertUrl = 3;
    string grafanaUrl = 4;
}

message FlowDTO {
    int64 id = 1;
    string flowName = 2;
    string statusAlias = 3;
    string bizId = 4;
    int32 status = 5;
    string statusName = 6;
    OperatorDTO operator = 7;
    int64 createTime = 8;
    int64 updateTime = 9;
    int64 deleteTime = 10;
}

message ListFlowsRequest {
    string bizId = 1;
    string keyword = 2;
    int64 status = 3;
    PageDTO page = 4;
}

message ListFlowsResponse {
    ResponseStatusDTO status = 1;
    repeated FlowDTO flows = 2;
    PageDTO page = 3;
}

