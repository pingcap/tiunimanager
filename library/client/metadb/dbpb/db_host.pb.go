// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: db_host.proto

package dbpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DBHostResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DBHostResponseStatus) Reset() {
	*x = DBHostResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBHostResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBHostResponseStatus) ProtoMessage() {}

func (x *DBHostResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBHostResponseStatus.ProtoReflect.Descriptor instead.
func (*DBHostResponseStatus) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{0}
}

func (x *DBHostResponseStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DBHostResponseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DBHostPageDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DBHostPageDTO) Reset() {
	*x = DBHostPageDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBHostPageDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBHostPageDTO) ProtoMessage() {}

func (x *DBHostPageDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBHostPageDTO.ProtoReflect.Descriptor instead.
func (*DBHostPageDTO) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{1}
}

func (x *DBHostPageDTO) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DBHostPageDTO) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DBHostPageDTO) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DBDiskDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskId   string `protobuf:"bytes,1,opt,name=diskId,proto3" json:"diskId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`          // [sda/sdb/nvmep0...]
	Capacity int32  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"` // Disk size, Unit: GB
	Path     string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`          // Disk mount path: [/data1]
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	UsedBy   string `protobuf:"bytes,6,opt,name=usedBy,proto3" json:"usedBy,omitempty"`
	Status   int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DBDiskDTO) Reset() {
	*x = DBDiskDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBDiskDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBDiskDTO) ProtoMessage() {}

func (x *DBDiskDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBDiskDTO.ProtoReflect.Descriptor instead.
func (*DBDiskDTO) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{2}
}

func (x *DBDiskDTO) GetDiskId() string {
	if x != nil {
		return x.DiskId
	}
	return ""
}

func (x *DBDiskDTO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBDiskDTO) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *DBDiskDTO) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DBDiskDTO) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DBDiskDTO) GetUsedBy() string {
	if x != nil {
		return x.UsedBy
	}
	return ""
}

func (x *DBDiskDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DBAllocationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureDomain string `protobuf:"bytes,1,opt,name=failureDomain,proto3" json:"failureDomain,omitempty"`
	CpuCores      int32  `protobuf:"varint,2,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	Memory        int32  `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Count         int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Purpose       string `protobuf:"bytes,5,opt,name=purpose,proto3" json:"purpose,omitempty"`
}

func (x *DBAllocationReq) Reset() {
	*x = DBAllocationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAllocationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAllocationReq) ProtoMessage() {}

func (x *DBAllocationReq) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAllocationReq.ProtoReflect.Descriptor instead.
func (*DBAllocationReq) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{3}
}

func (x *DBAllocationReq) GetFailureDomain() string {
	if x != nil {
		return x.FailureDomain
	}
	return ""
}

func (x *DBAllocationReq) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *DBAllocationReq) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DBAllocationReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DBAllocationReq) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

type DBHostInfoDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId       string       `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
	HostName     string       `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Region       string       `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Az           string       `protobuf:"bytes,4,opt,name=az,proto3" json:"az,omitempty"`
	Rack         string       `protobuf:"bytes,5,opt,name=rack,proto3" json:"rack,omitempty"`
	Ip           string       `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`
	UserName     string       `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	Passwd       string       `protobuf:"bytes,8,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Status       int32        `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Stat         int32        `protobuf:"varint,10,opt,name=stat,proto3" json:"stat,omitempty"`
	Arch         string       `protobuf:"bytes,11,opt,name=arch,proto3" json:"arch,omitempty"`
	Os           string       `protobuf:"bytes,12,opt,name=os,proto3" json:"os,omitempty"` // Host os
	Kernel       string       `protobuf:"bytes,13,opt,name=kernel,proto3" json:"kernel,omitempty"`
	Spec         string       `protobuf:"bytes,14,opt,name=spec,proto3" json:"spec,omitempty"`                  // Host Spec ["4C8G/16C32g"]
	CpuCores     int32        `protobuf:"varint,15,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`         // Host cpu cores spec
	Memory       int32        `protobuf:"varint,16,opt,name=memory,proto3" json:"memory,omitempty"`             // Host memory spec
	FreeCpuCores int32        `protobuf:"varint,17,opt,name=freeCpuCores,proto3" json:"freeCpuCores,omitempty"` // Host cpu Remains
	FreeMemory   int32        `protobuf:"varint,18,opt,name=freeMemory,proto3" json:"freeMemory,omitempty"`     // Host memory Remains, Unit:GB
	Nic          string       `protobuf:"bytes,19,opt,name=nic,proto3" json:"nic,omitempty"`                    // Host network type: 1GE or 10GE
	Purpose      string       `protobuf:"bytes,20,opt,name=purpose,proto3" json:"purpose,omitempty"`            // What Purpose is the host used for? [compute/storage or general]
	DiskType     string       `protobuf:"bytes,21,opt,name=diskType,proto3" json:"diskType,omitempty"`
	Reserved     bool         `protobuf:"varint,22,opt,name=reserved,proto3" json:"reserved,omitempty"`
	CreateAt     int64        `protobuf:"varint,23,opt,name=createAt,proto3" json:"createAt,omitempty"`
	UpdateAt     int64        `protobuf:"varint,24,opt,name=updateAt,proto3" json:"updateAt,omitempty"`
	Disks        []*DBDiskDTO `protobuf:"bytes,25,rep,name=disks,proto3" json:"disks,omitempty"`
}

func (x *DBHostInfoDTO) Reset() {
	*x = DBHostInfoDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBHostInfoDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBHostInfoDTO) ProtoMessage() {}

func (x *DBHostInfoDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBHostInfoDTO.ProtoReflect.Descriptor instead.
func (*DBHostInfoDTO) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{4}
}

func (x *DBHostInfoDTO) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *DBHostInfoDTO) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *DBHostInfoDTO) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DBHostInfoDTO) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *DBHostInfoDTO) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *DBHostInfoDTO) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DBHostInfoDTO) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DBHostInfoDTO) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *DBHostInfoDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBHostInfoDTO) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *DBHostInfoDTO) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *DBHostInfoDTO) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DBHostInfoDTO) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *DBHostInfoDTO) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *DBHostInfoDTO) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *DBHostInfoDTO) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DBHostInfoDTO) GetFreeCpuCores() int32 {
	if x != nil {
		return x.FreeCpuCores
	}
	return 0
}

func (x *DBHostInfoDTO) GetFreeMemory() int32 {
	if x != nil {
		return x.FreeMemory
	}
	return 0
}

func (x *DBHostInfoDTO) GetNic() string {
	if x != nil {
		return x.Nic
	}
	return ""
}

func (x *DBHostInfoDTO) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *DBHostInfoDTO) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

func (x *DBHostInfoDTO) GetReserved() bool {
	if x != nil {
		return x.Reserved
	}
	return false
}

func (x *DBHostInfoDTO) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *DBHostInfoDTO) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *DBHostInfoDTO) GetDisks() []*DBDiskDTO {
	if x != nil {
		return x.Disks
	}
	return nil
}

type DBAllocHostDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName string     `protobuf:"bytes,1,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Ip       string     `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	UserName string     `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Passwd   string     `protobuf:"bytes,4,opt,name=passwd,proto3" json:"passwd,omitempty"`
	CpuCores int32      `protobuf:"varint,5,opt,name=cpuCores,proto3" json:"cpuCores,omitempty"`
	Memory   int32      `protobuf:"varint,6,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk     *DBDiskDTO `protobuf:"bytes,7,opt,name=disk,proto3" json:"disk,omitempty"`
}

func (x *DBAllocHostDTO) Reset() {
	*x = DBAllocHostDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAllocHostDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAllocHostDTO) ProtoMessage() {}

func (x *DBAllocHostDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAllocHostDTO.ProtoReflect.Descriptor instead.
func (*DBAllocHostDTO) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{5}
}

func (x *DBAllocHostDTO) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *DBAllocHostDTO) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DBAllocHostDTO) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DBAllocHostDTO) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *DBAllocHostDTO) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *DBAllocHostDTO) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DBAllocHostDTO) GetDisk() *DBDiskDTO {
	if x != nil {
		return x.Disk
	}
	return nil
}

type DBFailureDomainResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureDomain string `protobuf:"bytes,1,opt,name=failureDomain,proto3" json:"failureDomain,omitempty"`
	Purpose       string `protobuf:"bytes,2,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Spec          string `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	Count         int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DBFailureDomainResource) Reset() {
	*x = DBFailureDomainResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBFailureDomainResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBFailureDomainResource) ProtoMessage() {}

func (x *DBFailureDomainResource) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBFailureDomainResource.ProtoReflect.Descriptor instead.
func (*DBFailureDomainResource) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{6}
}

func (x *DBFailureDomainResource) GetFailureDomain() string {
	if x != nil {
		return x.FailureDomain
	}
	return ""
}

func (x *DBFailureDomainResource) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *DBFailureDomainResource) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *DBFailureDomainResource) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DBAddHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host *DBHostInfoDTO `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *DBAddHostRequest) Reset() {
	*x = DBAddHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAddHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAddHostRequest) ProtoMessage() {}

func (x *DBAddHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAddHostRequest.ProtoReflect.Descriptor instead.
func (*DBAddHostRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{7}
}

func (x *DBAddHostRequest) GetHost() *DBHostInfoDTO {
	if x != nil {
		return x.Host
	}
	return nil
}

type DBAddHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs     *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	HostId string                `protobuf:"bytes,2,opt,name=HostId,proto3" json:"HostId,omitempty"`
}

func (x *DBAddHostResponse) Reset() {
	*x = DBAddHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAddHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAddHostResponse) ProtoMessage() {}

func (x *DBAddHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAddHostResponse.ProtoReflect.Descriptor instead.
func (*DBAddHostResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{8}
}

func (x *DBAddHostResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBAddHostResponse) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type DBAddHostsInBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hosts []*DBHostInfoDTO `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *DBAddHostsInBatchRequest) Reset() {
	*x = DBAddHostsInBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAddHostsInBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAddHostsInBatchRequest) ProtoMessage() {}

func (x *DBAddHostsInBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAddHostsInBatchRequest.ProtoReflect.Descriptor instead.
func (*DBAddHostsInBatchRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{9}
}

func (x *DBAddHostsInBatchRequest) GetHosts() []*DBHostInfoDTO {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type DBAddHostsInBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs      *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	HostIds []string              `protobuf:"bytes,2,rep,name=HostIds,proto3" json:"HostIds,omitempty"`
}

func (x *DBAddHostsInBatchResponse) Reset() {
	*x = DBAddHostsInBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAddHostsInBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAddHostsInBatchResponse) ProtoMessage() {}

func (x *DBAddHostsInBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAddHostsInBatchResponse.ProtoReflect.Descriptor instead.
func (*DBAddHostsInBatchResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{10}
}

func (x *DBAddHostsInBatchResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBAddHostsInBatchResponse) GetHostIds() []string {
	if x != nil {
		return x.HostIds
	}
	return nil
}

type DBRemoveHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *DBRemoveHostRequest) Reset() {
	*x = DBRemoveHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBRemoveHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRemoveHostRequest) ProtoMessage() {}

func (x *DBRemoveHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRemoveHostRequest.ProtoReflect.Descriptor instead.
func (*DBRemoveHostRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{11}
}

func (x *DBRemoveHostRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type DBRemoveHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
}

func (x *DBRemoveHostResponse) Reset() {
	*x = DBRemoveHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBRemoveHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRemoveHostResponse) ProtoMessage() {}

func (x *DBRemoveHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRemoveHostResponse.ProtoReflect.Descriptor instead.
func (*DBRemoveHostResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{12}
}

func (x *DBRemoveHostResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

type DBRemoveHostsInBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostIds []string `protobuf:"bytes,1,rep,name=hostIds,proto3" json:"hostIds,omitempty"`
}

func (x *DBRemoveHostsInBatchRequest) Reset() {
	*x = DBRemoveHostsInBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBRemoveHostsInBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRemoveHostsInBatchRequest) ProtoMessage() {}

func (x *DBRemoveHostsInBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRemoveHostsInBatchRequest.ProtoReflect.Descriptor instead.
func (*DBRemoveHostsInBatchRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{13}
}

func (x *DBRemoveHostsInBatchRequest) GetHostIds() []string {
	if x != nil {
		return x.HostIds
	}
	return nil
}

type DBRemoveHostsInBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
}

func (x *DBRemoveHostsInBatchResponse) Reset() {
	*x = DBRemoveHostsInBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBRemoveHostsInBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRemoveHostsInBatchResponse) ProtoMessage() {}

func (x *DBRemoveHostsInBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRemoveHostsInBatchResponse.ProtoReflect.Descriptor instead.
func (*DBRemoveHostsInBatchResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{14}
}

func (x *DBRemoveHostsInBatchResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

type DBUpdateHostStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	HostIds []string `protobuf:"bytes,2,rep,name=hostIds,proto3" json:"hostIds,omitempty"`
}

func (x *DBUpdateHostStatusRequest) Reset() {
	*x = DBUpdateHostStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateHostStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateHostStatusRequest) ProtoMessage() {}

func (x *DBUpdateHostStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateHostStatusRequest.ProtoReflect.Descriptor instead.
func (*DBUpdateHostStatusRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{15}
}

func (x *DBUpdateHostStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBUpdateHostStatusRequest) GetHostIds() []string {
	if x != nil {
		return x.HostIds
	}
	return nil
}

type DBUpdateHostStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
}

func (x *DBUpdateHostStatusResponse) Reset() {
	*x = DBUpdateHostStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateHostStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateHostStatusResponse) ProtoMessage() {}

func (x *DBUpdateHostStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateHostStatusResponse.ProtoReflect.Descriptor instead.
func (*DBUpdateHostStatusResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{16}
}

func (x *DBUpdateHostStatusResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

type DBReserveHostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reserved bool     `protobuf:"varint,1,opt,name=reserved,proto3" json:"reserved,omitempty"`
	HostIds  []string `protobuf:"bytes,2,rep,name=hostIds,proto3" json:"hostIds,omitempty"`
}

func (x *DBReserveHostRequest) Reset() {
	*x = DBReserveHostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBReserveHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBReserveHostRequest) ProtoMessage() {}

func (x *DBReserveHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBReserveHostRequest.ProtoReflect.Descriptor instead.
func (*DBReserveHostRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{17}
}

func (x *DBReserveHostRequest) GetReserved() bool {
	if x != nil {
		return x.Reserved
	}
	return false
}

func (x *DBReserveHostRequest) GetHostIds() []string {
	if x != nil {
		return x.HostIds
	}
	return nil
}

type DBReserveHostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
}

func (x *DBReserveHostResponse) Reset() {
	*x = DBReserveHostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBReserveHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBReserveHostResponse) ProtoMessage() {}

func (x *DBReserveHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBReserveHostResponse.ProtoReflect.Descriptor instead.
func (*DBReserveHostResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{18}
}

func (x *DBReserveHostResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

type DBListHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Stat    int32          `protobuf:"varint,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Purpose string         `protobuf:"bytes,3,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Page    *DBHostPageDTO `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *DBListHostsRequest) Reset() {
	*x = DBListHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListHostsRequest) ProtoMessage() {}

func (x *DBListHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListHostsRequest.ProtoReflect.Descriptor instead.
func (*DBListHostsRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{19}
}

func (x *DBListHostsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBListHostsRequest) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *DBListHostsRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *DBListHostsRequest) GetPage() *DBHostPageDTO {
	if x != nil {
		return x.Page
	}
	return nil
}

type DBListHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs       *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	HostList []*DBHostInfoDTO      `protobuf:"bytes,2,rep,name=hostList,proto3" json:"hostList,omitempty"`
	Page     *DBHostPageDTO        `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *DBListHostsResponse) Reset() {
	*x = DBListHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListHostsResponse) ProtoMessage() {}

func (x *DBListHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListHostsResponse.ProtoReflect.Descriptor instead.
func (*DBListHostsResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{20}
}

func (x *DBListHostsResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBListHostsResponse) GetHostList() []*DBHostInfoDTO {
	if x != nil {
		return x.HostList
	}
	return nil
}

func (x *DBListHostsResponse) GetPage() *DBHostPageDTO {
	if x != nil {
		return x.Page
	}
	return nil
}

type DBCheckDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostId string `protobuf:"bytes,1,opt,name=hostId,proto3" json:"hostId,omitempty"`
}

func (x *DBCheckDetailsRequest) Reset() {
	*x = DBCheckDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCheckDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCheckDetailsRequest) ProtoMessage() {}

func (x *DBCheckDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCheckDetailsRequest.ProtoReflect.Descriptor instead.
func (*DBCheckDetailsRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{21}
}

func (x *DBCheckDetailsRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

type DBCheckDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs      *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Details *DBHostInfoDTO        `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *DBCheckDetailsResponse) Reset() {
	*x = DBCheckDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCheckDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCheckDetailsResponse) ProtoMessage() {}

func (x *DBCheckDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCheckDetailsResponse.ProtoReflect.Descriptor instead.
func (*DBCheckDetailsResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{22}
}

func (x *DBCheckDetailsResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBCheckDetailsResponse) GetDetails() *DBHostInfoDTO {
	if x != nil {
		return x.Details
	}
	return nil
}

type DBAllocHostsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdReq   []*DBAllocationReq `protobuf:"bytes,1,rep,name=pdReq,proto3" json:"pdReq,omitempty"`
	TidbReq []*DBAllocationReq `protobuf:"bytes,2,rep,name=tidbReq,proto3" json:"tidbReq,omitempty"`
	TikvReq []*DBAllocationReq `protobuf:"bytes,3,rep,name=tikvReq,proto3" json:"tikvReq,omitempty"`
}

func (x *DBAllocHostsRequest) Reset() {
	*x = DBAllocHostsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAllocHostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAllocHostsRequest) ProtoMessage() {}

func (x *DBAllocHostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAllocHostsRequest.ProtoReflect.Descriptor instead.
func (*DBAllocHostsRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{23}
}

func (x *DBAllocHostsRequest) GetPdReq() []*DBAllocationReq {
	if x != nil {
		return x.PdReq
	}
	return nil
}

func (x *DBAllocHostsRequest) GetTidbReq() []*DBAllocationReq {
	if x != nil {
		return x.TidbReq
	}
	return nil
}

func (x *DBAllocHostsRequest) GetTikvReq() []*DBAllocationReq {
	if x != nil {
		return x.TikvReq
	}
	return nil
}

type DBAllocHostsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs        *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	PdHosts   []*DBAllocHostDTO     `protobuf:"bytes,2,rep,name=pdHosts,proto3" json:"pdHosts,omitempty"`
	TidbHosts []*DBAllocHostDTO     `protobuf:"bytes,3,rep,name=tidbHosts,proto3" json:"tidbHosts,omitempty"`
	TikvHosts []*DBAllocHostDTO     `protobuf:"bytes,4,rep,name=tikvHosts,proto3" json:"tikvHosts,omitempty"`
}

func (x *DBAllocHostsResponse) Reset() {
	*x = DBAllocHostsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBAllocHostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBAllocHostsResponse) ProtoMessage() {}

func (x *DBAllocHostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBAllocHostsResponse.ProtoReflect.Descriptor instead.
func (*DBAllocHostsResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{24}
}

func (x *DBAllocHostsResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBAllocHostsResponse) GetPdHosts() []*DBAllocHostDTO {
	if x != nil {
		return x.PdHosts
	}
	return nil
}

func (x *DBAllocHostsResponse) GetTidbHosts() []*DBAllocHostDTO {
	if x != nil {
		return x.TidbHosts
	}
	return nil
}

func (x *DBAllocHostsResponse) GetTikvHosts() []*DBAllocHostDTO {
	if x != nil {
		return x.TikvHosts
	}
	return nil
}

type DBGetFailureDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureDomainType int32 `protobuf:"varint,1,opt,name=failureDomainType,proto3" json:"failureDomainType,omitempty"`
}

func (x *DBGetFailureDomainRequest) Reset() {
	*x = DBGetFailureDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetFailureDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetFailureDomainRequest) ProtoMessage() {}

func (x *DBGetFailureDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetFailureDomainRequest.ProtoReflect.Descriptor instead.
func (*DBGetFailureDomainRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{25}
}

func (x *DBGetFailureDomainRequest) GetFailureDomainType() int32 {
	if x != nil {
		return x.FailureDomainType
	}
	return 0
}

type DBGetFailureDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs     *DBHostResponseStatus      `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	FdList []*DBFailureDomainResource `protobuf:"bytes,2,rep,name=fdList,proto3" json:"fdList,omitempty"`
}

func (x *DBGetFailureDomainResponse) Reset() {
	*x = DBGetFailureDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetFailureDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetFailureDomainResponse) ProtoMessage() {}

func (x *DBGetFailureDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetFailureDomainResponse.ProtoReflect.Descriptor instead.
func (*DBGetFailureDomainResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{26}
}

func (x *DBGetFailureDomainResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBGetFailureDomainResponse) GetFdList() []*DBFailureDomainResource {
	if x != nil {
		return x.FdList
	}
	return nil
}

type DBHostFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch     string `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
	Purpose  string `protobuf:"bytes,2,opt,name=purpose,proto3" json:"purpose,omitempty"`
	DiskType string `protobuf:"bytes,3,opt,name=diskType,proto3" json:"diskType,omitempty"`
}

func (x *DBHostFilter) Reset() {
	*x = DBHostFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBHostFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBHostFilter) ProtoMessage() {}

func (x *DBHostFilter) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBHostFilter.ProtoReflect.Descriptor instead.
func (*DBHostFilter) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{27}
}

func (x *DBHostFilter) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *DBHostFilter) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *DBHostFilter) GetDiskType() string {
	if x != nil {
		return x.DiskType
	}
	return ""
}

type DBGetHierarchyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *DBHostFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Level  int32         `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Depth  int32         `protobuf:"varint,3,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *DBGetHierarchyRequest) Reset() {
	*x = DBGetHierarchyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetHierarchyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetHierarchyRequest) ProtoMessage() {}

func (x *DBGetHierarchyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetHierarchyRequest.ProtoReflect.Descriptor instead.
func (*DBGetHierarchyRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{28}
}

func (x *DBGetHierarchyRequest) GetFilter() *DBHostFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DBGetHierarchyRequest) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *DBGetHierarchyRequest) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type DBNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Prefix   string    `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Name     string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SubNodes []*DBNode `protobuf:"bytes,4,rep,name=subNodes,proto3" json:"subNodes,omitempty"`
}

func (x *DBNode) Reset() {
	*x = DBNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBNode) ProtoMessage() {}

func (x *DBNode) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBNode.ProtoReflect.Descriptor instead.
func (*DBNode) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{29}
}

func (x *DBNode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DBNode) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *DBNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBNode) GetSubNodes() []*DBNode {
	if x != nil {
		return x.SubNodes
	}
	return nil
}

type DBGetHierarchyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs   *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Root *DBNode               `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *DBGetHierarchyResponse) Reset() {
	*x = DBGetHierarchyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetHierarchyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetHierarchyResponse) ProtoMessage() {}

func (x *DBGetHierarchyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetHierarchyResponse.ProtoReflect.Descriptor instead.
func (*DBGetHierarchyResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{30}
}

func (x *DBGetHierarchyResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBGetHierarchyResponse) GetRoot() *DBNode {
	if x != nil {
		return x.Root
	}
	return nil
}

type DBStockLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Zone   string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	Rack   string `protobuf:"bytes,3,opt,name=rack,proto3" json:"rack,omitempty"`
	Host   string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *DBStockLocation) Reset() {
	*x = DBStockLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBStockLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBStockLocation) ProtoMessage() {}

func (x *DBStockLocation) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBStockLocation.ProtoReflect.Descriptor instead.
func (*DBStockLocation) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{31}
}

func (x *DBStockLocation) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DBStockLocation) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *DBStockLocation) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *DBStockLocation) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type DBStockHostFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arch   string `protobuf:"bytes,1,opt,name=arch,proto3" json:"arch,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Stat   int32  `protobuf:"varint,3,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *DBStockHostFilter) Reset() {
	*x = DBStockHostFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBStockHostFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBStockHostFilter) ProtoMessage() {}

func (x *DBStockHostFilter) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBStockHostFilter.ProtoReflect.Descriptor instead.
func (*DBStockHostFilter) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{32}
}

func (x *DBStockHostFilter) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *DBStockHostFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBStockHostFilter) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

type DBStockDiskFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Capacity int32  `protobuf:"varint,3,opt,name=capacity,proto3" json:"capacity,omitempty"`
}

func (x *DBStockDiskFilter) Reset() {
	*x = DBStockDiskFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBStockDiskFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBStockDiskFilter) ProtoMessage() {}

func (x *DBStockDiskFilter) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBStockDiskFilter.ProtoReflect.Descriptor instead.
func (*DBStockDiskFilter) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{33}
}

func (x *DBStockDiskFilter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DBStockDiskFilter) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBStockDiskFilter) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

type DBGetStocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   *DBStockLocation   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	HostFilter *DBStockHostFilter `protobuf:"bytes,2,opt,name=hostFilter,proto3" json:"hostFilter,omitempty"`
	DiskFilter *DBStockDiskFilter `protobuf:"bytes,3,opt,name=diskFilter,proto3" json:"diskFilter,omitempty"`
}

func (x *DBGetStocksRequest) Reset() {
	*x = DBGetStocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetStocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetStocksRequest) ProtoMessage() {}

func (x *DBGetStocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetStocksRequest.ProtoReflect.Descriptor instead.
func (*DBGetStocksRequest) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{34}
}

func (x *DBGetStocksRequest) GetLocation() *DBStockLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *DBGetStocksRequest) GetHostFilter() *DBStockHostFilter {
	if x != nil {
		return x.HostFilter
	}
	return nil
}

func (x *DBGetStocksRequest) GetDiskFilter() *DBStockDiskFilter {
	if x != nil {
		return x.DiskFilter
	}
	return nil
}

type DBStocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FreeHostCount    int32 `protobuf:"varint,1,opt,name=freeHostCount,proto3" json:"freeHostCount,omitempty"`
	FreeCpuCores     int32 `protobuf:"varint,2,opt,name=freeCpuCores,proto3" json:"freeCpuCores,omitempty"`
	FreeMemory       int32 `protobuf:"varint,3,opt,name=freeMemory,proto3" json:"freeMemory,omitempty"`
	FreeDiskCount    int32 `protobuf:"varint,4,opt,name=freeDiskCount,proto3" json:"freeDiskCount,omitempty"`
	FreeDiskCapacity int32 `protobuf:"varint,5,opt,name=freeDiskCapacity,proto3" json:"freeDiskCapacity,omitempty"`
}

func (x *DBStocks) Reset() {
	*x = DBStocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBStocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBStocks) ProtoMessage() {}

func (x *DBStocks) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBStocks.ProtoReflect.Descriptor instead.
func (*DBStocks) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{35}
}

func (x *DBStocks) GetFreeHostCount() int32 {
	if x != nil {
		return x.FreeHostCount
	}
	return 0
}

func (x *DBStocks) GetFreeCpuCores() int32 {
	if x != nil {
		return x.FreeCpuCores
	}
	return 0
}

func (x *DBStocks) GetFreeMemory() int32 {
	if x != nil {
		return x.FreeMemory
	}
	return 0
}

func (x *DBStocks) GetFreeDiskCount() int32 {
	if x != nil {
		return x.FreeDiskCount
	}
	return 0
}

func (x *DBStocks) GetFreeDiskCapacity() int32 {
	if x != nil {
		return x.FreeDiskCapacity
	}
	return 0
}

type DBGetStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rs     *DBHostResponseStatus `protobuf:"bytes,1,opt,name=rs,proto3" json:"rs,omitempty"`
	Stocks *DBStocks             `protobuf:"bytes,2,opt,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *DBGetStocksResponse) Reset() {
	*x = DBGetStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_host_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBGetStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBGetStocksResponse) ProtoMessage() {}

func (x *DBGetStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_host_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBGetStocksResponse.ProtoReflect.Descriptor instead.
func (*DBGetStocksResponse) Descriptor() ([]byte, []int) {
	return file_db_host_proto_rawDescGZIP(), []int{36}
}

func (x *DBGetStocksResponse) GetRs() *DBHostResponseStatus {
	if x != nil {
		return x.Rs
	}
	return nil
}

func (x *DBGetStocksResponse) GetStocks() *DBStocks {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_db_host_proto protoreflect.FileDescriptor

var file_db_host_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x44, 0x0a, 0x14, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x0d, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x44, 0x54, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xab, 0x01, 0x0a,
	0x09, 0x44, 0x42, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x44,
	0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x24,
	0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0xf5, 0x04, 0x0a, 0x0d, 0x44, 0x42, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x54, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x7a, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x61, 0x7a, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70,
	0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70,
	0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x43, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x43, 0x70, 0x75, 0x43, 0x6f, 0x72,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6e, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x44, 0x42, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73,
	0x22, 0xc4, 0x01, 0x0a, 0x0e, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74,
	0x44, 0x54, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x54,
	0x4f, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x44, 0x42, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72,
	0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x36, 0x0a,
	0x10, 0x44, 0x42, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x54, 0x4f, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x11, 0x44, 0x42, 0x41, 0x64, 0x64, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x44, 0x42, 0x41,
	0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x19, 0x44,
	0x42, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x42, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x44, 0x42, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44,
	0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x22, 0x37, 0x0a, 0x1b, 0x44, 0x42, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x45, 0x0a, 0x1c, 0x44, 0x42, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44,
	0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x22, 0x4d, 0x0a, 0x19, 0x44, 0x42, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x1a, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x14, 0x44,
	0x42, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x15, 0x44, 0x42, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x22, 0x7e, 0x0a, 0x12, 0x44, 0x42, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x44, 0x54, 0x4f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x44, 0x42,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x54, 0x4f, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x44,
	0x54, 0x4f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x44, 0x42, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x16, 0x44, 0x42, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05,
	0x70, 0x64, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x42,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x69, 0x64, 0x62, 0x52, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x07, 0x74, 0x69, 0x64, 0x62, 0x52, 0x65, 0x71,
	0x12, 0x2a, 0x0a, 0x07, 0x74, 0x69, 0x6b, 0x76, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x52, 0x07, 0x74, 0x69, 0x6b, 0x76, 0x52, 0x65, 0x71, 0x22, 0xc6, 0x01, 0x0a,
	0x14, 0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x07,
	0x70, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x44, 0x42, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x07,
	0x70, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69, 0x64, 0x62, 0x48,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x42, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x09, 0x74, 0x69, 0x64,
	0x62, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x69, 0x6b, 0x76, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x42, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x52, 0x09, 0x74, 0x69, 0x6b, 0x76,
	0x48, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x19, 0x44, 0x42, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x75, 0x0a, 0x1a, 0x44, 0x42, 0x47, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x48,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x44, 0x42, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x66, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x0c, 0x44, 0x42, 0x48, 0x6f, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6a, 0x0a, 0x15, 0x44, 0x42, 0x47, 0x65, 0x74, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x42, 0x48,
	0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x22, 0x6d, 0x0a,
	0x06, 0x44, 0x42, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x42, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x16,
	0x44, 0x42, 0x47, 0x65, 0x74, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x1b, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x42,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x65, 0x0a, 0x0f, 0x44, 0x42,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x22, 0x53, 0x0a, 0x11, 0x44, 0x42, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x44, 0x42, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x44, 0x69, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x44, 0x42, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44,
	0x42, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44,
	0x42, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x44, 0x42, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x6b, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0xc6, 0x01, 0x0a, 0x08, 0x44, 0x42, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x72, 0x65, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x43, 0x70, 0x75, 0x43, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x43,
	0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x65, 0x65, 0x44,
	0x69, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x66, 0x72, 0x65, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x10, 0x66, 0x72, 0x65, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x44, 0x69, 0x73,
	0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x5f, 0x0a, 0x13, 0x44, 0x42, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x02, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44,
	0x42, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x02, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x42, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f,
	0x64, 0x62, 0x70, 0x62, 0x2f, 0x3b, 0x64, 0x62, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_db_host_proto_rawDescOnce sync.Once
	file_db_host_proto_rawDescData = file_db_host_proto_rawDesc
)

func file_db_host_proto_rawDescGZIP() []byte {
	file_db_host_proto_rawDescOnce.Do(func() {
		file_db_host_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_host_proto_rawDescData)
	})
	return file_db_host_proto_rawDescData
}

var file_db_host_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_db_host_proto_goTypes = []interface{}{
	(*DBHostResponseStatus)(nil),         // 0: DBHostResponseStatus
	(*DBHostPageDTO)(nil),                // 1: DBHostPageDTO
	(*DBDiskDTO)(nil),                    // 2: DBDiskDTO
	(*DBAllocationReq)(nil),              // 3: DBAllocationReq
	(*DBHostInfoDTO)(nil),                // 4: DBHostInfoDTO
	(*DBAllocHostDTO)(nil),               // 5: DBAllocHostDTO
	(*DBFailureDomainResource)(nil),      // 6: DBFailureDomainResource
	(*DBAddHostRequest)(nil),             // 7: DBAddHostRequest
	(*DBAddHostResponse)(nil),            // 8: DBAddHostResponse
	(*DBAddHostsInBatchRequest)(nil),     // 9: DBAddHostsInBatchRequest
	(*DBAddHostsInBatchResponse)(nil),    // 10: DBAddHostsInBatchResponse
	(*DBRemoveHostRequest)(nil),          // 11: DBRemoveHostRequest
	(*DBRemoveHostResponse)(nil),         // 12: DBRemoveHostResponse
	(*DBRemoveHostsInBatchRequest)(nil),  // 13: DBRemoveHostsInBatchRequest
	(*DBRemoveHostsInBatchResponse)(nil), // 14: DBRemoveHostsInBatchResponse
	(*DBUpdateHostStatusRequest)(nil),    // 15: DBUpdateHostStatusRequest
	(*DBUpdateHostStatusResponse)(nil),   // 16: DBUpdateHostStatusResponse
	(*DBReserveHostRequest)(nil),         // 17: DBReserveHostRequest
	(*DBReserveHostResponse)(nil),        // 18: DBReserveHostResponse
	(*DBListHostsRequest)(nil),           // 19: DBListHostsRequest
	(*DBListHostsResponse)(nil),          // 20: DBListHostsResponse
	(*DBCheckDetailsRequest)(nil),        // 21: DBCheckDetailsRequest
	(*DBCheckDetailsResponse)(nil),       // 22: DBCheckDetailsResponse
	(*DBAllocHostsRequest)(nil),          // 23: DBAllocHostsRequest
	(*DBAllocHostsResponse)(nil),         // 24: DBAllocHostsResponse
	(*DBGetFailureDomainRequest)(nil),    // 25: DBGetFailureDomainRequest
	(*DBGetFailureDomainResponse)(nil),   // 26: DBGetFailureDomainResponse
	(*DBHostFilter)(nil),                 // 27: DBHostFilter
	(*DBGetHierarchyRequest)(nil),        // 28: DBGetHierarchyRequest
	(*DBNode)(nil),                       // 29: DBNode
	(*DBGetHierarchyResponse)(nil),       // 30: DBGetHierarchyResponse
	(*DBStockLocation)(nil),              // 31: DBStockLocation
	(*DBStockHostFilter)(nil),            // 32: DBStockHostFilter
	(*DBStockDiskFilter)(nil),            // 33: DBStockDiskFilter
	(*DBGetStocksRequest)(nil),           // 34: DBGetStocksRequest
	(*DBStocks)(nil),                     // 35: DBStocks
	(*DBGetStocksResponse)(nil),          // 36: DBGetStocksResponse
}
var file_db_host_proto_depIdxs = []int32{
	2,  // 0: DBHostInfoDTO.disks:type_name -> DBDiskDTO
	2,  // 1: DBAllocHostDTO.disk:type_name -> DBDiskDTO
	4,  // 2: DBAddHostRequest.host:type_name -> DBHostInfoDTO
	0,  // 3: DBAddHostResponse.rs:type_name -> DBHostResponseStatus
	4,  // 4: DBAddHostsInBatchRequest.hosts:type_name -> DBHostInfoDTO
	0,  // 5: DBAddHostsInBatchResponse.rs:type_name -> DBHostResponseStatus
	0,  // 6: DBRemoveHostResponse.rs:type_name -> DBHostResponseStatus
	0,  // 7: DBRemoveHostsInBatchResponse.rs:type_name -> DBHostResponseStatus
	0,  // 8: DBUpdateHostStatusResponse.rs:type_name -> DBHostResponseStatus
	0,  // 9: DBReserveHostResponse.rs:type_name -> DBHostResponseStatus
	1,  // 10: DBListHostsRequest.page:type_name -> DBHostPageDTO
	0,  // 11: DBListHostsResponse.rs:type_name -> DBHostResponseStatus
	4,  // 12: DBListHostsResponse.hostList:type_name -> DBHostInfoDTO
	1,  // 13: DBListHostsResponse.page:type_name -> DBHostPageDTO
	0,  // 14: DBCheckDetailsResponse.rs:type_name -> DBHostResponseStatus
	4,  // 15: DBCheckDetailsResponse.details:type_name -> DBHostInfoDTO
	3,  // 16: DBAllocHostsRequest.pdReq:type_name -> DBAllocationReq
	3,  // 17: DBAllocHostsRequest.tidbReq:type_name -> DBAllocationReq
	3,  // 18: DBAllocHostsRequest.tikvReq:type_name -> DBAllocationReq
	0,  // 19: DBAllocHostsResponse.rs:type_name -> DBHostResponseStatus
	5,  // 20: DBAllocHostsResponse.pdHosts:type_name -> DBAllocHostDTO
	5,  // 21: DBAllocHostsResponse.tidbHosts:type_name -> DBAllocHostDTO
	5,  // 22: DBAllocHostsResponse.tikvHosts:type_name -> DBAllocHostDTO
	0,  // 23: DBGetFailureDomainResponse.rs:type_name -> DBHostResponseStatus
	6,  // 24: DBGetFailureDomainResponse.fdList:type_name -> DBFailureDomainResource
	27, // 25: DBGetHierarchyRequest.filter:type_name -> DBHostFilter
	29, // 26: DBNode.subNodes:type_name -> DBNode
	0,  // 27: DBGetHierarchyResponse.rs:type_name -> DBHostResponseStatus
	29, // 28: DBGetHierarchyResponse.root:type_name -> DBNode
	31, // 29: DBGetStocksRequest.location:type_name -> DBStockLocation
	32, // 30: DBGetStocksRequest.hostFilter:type_name -> DBStockHostFilter
	33, // 31: DBGetStocksRequest.diskFilter:type_name -> DBStockDiskFilter
	0,  // 32: DBGetStocksResponse.rs:type_name -> DBHostResponseStatus
	35, // 33: DBGetStocksResponse.stocks:type_name -> DBStocks
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_db_host_proto_init() }
func file_db_host_proto_init() {
	if File_db_host_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_host_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBHostResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBHostPageDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBDiskDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAllocationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBHostInfoDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAllocHostDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBFailureDomainResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAddHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAddHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAddHostsInBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAddHostsInBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBRemoveHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBRemoveHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBRemoveHostsInBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBRemoveHostsInBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateHostStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateHostStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBReserveHostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBReserveHostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCheckDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCheckDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAllocHostsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBAllocHostsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetFailureDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetFailureDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBHostFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetHierarchyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetHierarchyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBStockLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBStockHostFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBStockDiskFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetStocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBStocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_host_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBGetStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_host_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_host_proto_goTypes,
		DependencyIndexes: file_db_host_proto_depIdxs,
		MessageInfos:      file_db_host_proto_msgTypes,
	}.Build()
	File_db_host_proto = out.File
	file_db_host_proto_rawDesc = nil
	file_db_host_proto_goTypes = nil
	file_db_host_proto_depIdxs = nil
}
