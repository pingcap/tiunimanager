// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: db_task.proto

package db

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DBTaskResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DBTaskResponseStatus) Reset() {
	*x = DBTaskResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBTaskResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBTaskResponseStatus) ProtoMessage() {}

func (x *DBTaskResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBTaskResponseStatus.ProtoReflect.Descriptor instead.
func (*DBTaskResponseStatus) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{0}
}

func (x *DBTaskResponseStatus) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DBTaskResponseStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DBFlowDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FlowName    string `protobuf:"bytes,2,opt,name=flowName,proto3" json:"flowName,omitempty"`
	StatusAlias string `protobuf:"bytes,3,opt,name=statusAlias,proto3" json:"statusAlias,omitempty"`
	BizId       string `protobuf:"bytes,4,opt,name=bizId,proto3" json:"bizId,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Operator    string `protobuf:"bytes,6,opt,name=operator,proto3" json:"operator,omitempty"`
	CreateTime  int64  `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime  int64  `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeleteTime  int64  `protobuf:"varint,9,opt,name=deleteTime,proto3" json:"deleteTime,omitempty"`
}

func (x *DBFlowDTO) Reset() {
	*x = DBFlowDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBFlowDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBFlowDTO) ProtoMessage() {}

func (x *DBFlowDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBFlowDTO.ProtoReflect.Descriptor instead.
func (*DBFlowDTO) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{1}
}

func (x *DBFlowDTO) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBFlowDTO) GetFlowName() string {
	if x != nil {
		return x.FlowName
	}
	return ""
}

func (x *DBFlowDTO) GetStatusAlias() string {
	if x != nil {
		return x.StatusAlias
	}
	return ""
}

func (x *DBFlowDTO) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *DBFlowDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBFlowDTO) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *DBFlowDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DBFlowDTO) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *DBFlowDTO) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

type DBTaskDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status         int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	TaskName       string `protobuf:"bytes,3,opt,name=taskName,proto3" json:"taskName,omitempty"`
	TaskReturnType string `protobuf:"bytes,4,opt,name=taskReturnType,proto3" json:"taskReturnType,omitempty"`
	BizId          string `protobuf:"bytes,5,opt,name=bizId,proto3" json:"bizId,omitempty"`
	Parameters     string `protobuf:"bytes,6,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Result         string `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	CreateTime     int64  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime     int64  `protobuf:"varint,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	DeleteTime     int64  `protobuf:"varint,10,opt,name=deleteTime,proto3" json:"deleteTime,omitempty"`
	ParentType     int32  `protobuf:"varint,11,opt,name=parentType,proto3" json:"parentType,omitempty"`
	ParentId       string `protobuf:"bytes,12,opt,name=parentId,proto3" json:"parentId,omitempty"`
}

func (x *DBTaskDTO) Reset() {
	*x = DBTaskDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBTaskDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBTaskDTO) ProtoMessage() {}

func (x *DBTaskDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBTaskDTO.ProtoReflect.Descriptor instead.
func (*DBTaskDTO) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{2}
}

func (x *DBTaskDTO) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBTaskDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBTaskDTO) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *DBTaskDTO) GetTaskReturnType() string {
	if x != nil {
		return x.TaskReturnType
	}
	return ""
}

func (x *DBTaskDTO) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *DBTaskDTO) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

func (x *DBTaskDTO) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *DBTaskDTO) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *DBTaskDTO) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *DBTaskDTO) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

func (x *DBTaskDTO) GetParentType() int32 {
	if x != nil {
		return x.ParentType
	}
	return 0
}

func (x *DBTaskDTO) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type DBCreateFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow *DBFlowDTO `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *DBCreateFlowRequest) Reset() {
	*x = DBCreateFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateFlowRequest) ProtoMessage() {}

func (x *DBCreateFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateFlowRequest.ProtoReflect.Descriptor instead.
func (*DBCreateFlowRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{3}
}

func (x *DBCreateFlowRequest) GetFlow() *DBFlowDTO {
	if x != nil {
		return x.Flow
	}
	return nil
}

type DBCreateFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Flow   *DBFlowDTO            `protobuf:"bytes,2,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *DBCreateFlowResponse) Reset() {
	*x = DBCreateFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateFlowResponse) ProtoMessage() {}

func (x *DBCreateFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateFlowResponse.ProtoReflect.Descriptor instead.
func (*DBCreateFlowResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{4}
}

func (x *DBCreateFlowResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBCreateFlowResponse) GetFlow() *DBFlowDTO {
	if x != nil {
		return x.Flow
	}
	return nil
}

type DBCreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *DBTaskDTO `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DBCreateTaskRequest) Reset() {
	*x = DBCreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateTaskRequest) ProtoMessage() {}

func (x *DBCreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateTaskRequest.ProtoReflect.Descriptor instead.
func (*DBCreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{5}
}

func (x *DBCreateTaskRequest) GetTask() *DBTaskDTO {
	if x != nil {
		return x.Task
	}
	return nil
}

type DBCreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Task   *DBTaskDTO            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DBCreateTaskResponse) Reset() {
	*x = DBCreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCreateTaskResponse) ProtoMessage() {}

func (x *DBCreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCreateTaskResponse.ProtoReflect.Descriptor instead.
func (*DBCreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{6}
}

func (x *DBCreateTaskResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBCreateTaskResponse) GetTask() *DBTaskDTO {
	if x != nil {
		return x.Task
	}
	return nil
}

type DBFlowWithTaskDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow  *DBFlowDTO   `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
	Tasks []*DBTaskDTO `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *DBFlowWithTaskDTO) Reset() {
	*x = DBFlowWithTaskDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBFlowWithTaskDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBFlowWithTaskDTO) ProtoMessage() {}

func (x *DBFlowWithTaskDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBFlowWithTaskDTO.ProtoReflect.Descriptor instead.
func (*DBFlowWithTaskDTO) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{7}
}

func (x *DBFlowWithTaskDTO) GetFlow() *DBFlowDTO {
	if x != nil {
		return x.Flow
	}
	return nil
}

func (x *DBFlowWithTaskDTO) GetTasks() []*DBTaskDTO {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DBUpdateFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowWithTasks *DBFlowWithTaskDTO `protobuf:"bytes,1,opt,name=flowWithTasks,proto3" json:"flowWithTasks,omitempty"`
}

func (x *DBUpdateFlowRequest) Reset() {
	*x = DBUpdateFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateFlowRequest) ProtoMessage() {}

func (x *DBUpdateFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateFlowRequest.ProtoReflect.Descriptor instead.
func (*DBUpdateFlowRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{8}
}

func (x *DBUpdateFlowRequest) GetFlowWithTasks() *DBFlowWithTaskDTO {
	if x != nil {
		return x.FlowWithTasks
	}
	return nil
}

type DBUpdateFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FlowWithTasks *DBFlowWithTaskDTO    `protobuf:"bytes,2,opt,name=flowWithTasks,proto3" json:"flowWithTasks,omitempty"`
}

func (x *DBUpdateFlowResponse) Reset() {
	*x = DBUpdateFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateFlowResponse) ProtoMessage() {}

func (x *DBUpdateFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateFlowResponse.ProtoReflect.Descriptor instead.
func (*DBUpdateFlowResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{9}
}

func (x *DBUpdateFlowResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBUpdateFlowResponse) GetFlowWithTasks() *DBFlowWithTaskDTO {
	if x != nil {
		return x.FlowWithTasks
	}
	return nil
}

type DBUpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *DBTaskDTO `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DBUpdateTaskRequest) Reset() {
	*x = DBUpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateTaskRequest) ProtoMessage() {}

func (x *DBUpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*DBUpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{10}
}

func (x *DBUpdateTaskRequest) GetTask() *DBTaskDTO {
	if x != nil {
		return x.Task
	}
	return nil
}

type DBUpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Task   *DBTaskDTO            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DBUpdateTaskResponse) Reset() {
	*x = DBUpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBUpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBUpdateTaskResponse) ProtoMessage() {}

func (x *DBUpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBUpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*DBUpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{11}
}

func (x *DBUpdateTaskResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBUpdateTaskResponse) GetTask() *DBTaskDTO {
	if x != nil {
		return x.Task
	}
	return nil
}

type DBLoadFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DBLoadFlowRequest) Reset() {
	*x = DBLoadFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBLoadFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBLoadFlowRequest) ProtoMessage() {}

func (x *DBLoadFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBLoadFlowRequest.ProtoReflect.Descriptor instead.
func (*DBLoadFlowRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{12}
}

func (x *DBLoadFlowRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DBLoadFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FlowWithTasks *DBFlowWithTaskDTO    `protobuf:"bytes,2,opt,name=flowWithTasks,proto3" json:"flowWithTasks,omitempty"`
}

func (x *DBLoadFlowResponse) Reset() {
	*x = DBLoadFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBLoadFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBLoadFlowResponse) ProtoMessage() {}

func (x *DBLoadFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBLoadFlowResponse.ProtoReflect.Descriptor instead.
func (*DBLoadFlowResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{13}
}

func (x *DBLoadFlowResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBLoadFlowResponse) GetFlowWithTasks() *DBFlowWithTaskDTO {
	if x != nil {
		return x.FlowWithTasks
	}
	return nil
}

type DBLoadTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DBLoadTaskRequest) Reset() {
	*x = DBLoadTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBLoadTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBLoadTaskRequest) ProtoMessage() {}

func (x *DBLoadTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBLoadTaskRequest.ProtoReflect.Descriptor instead.
func (*DBLoadTaskRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{14}
}

func (x *DBLoadTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DBLoadTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Task   *DBTaskDTO            `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *DBLoadTaskResponse) Reset() {
	*x = DBLoadTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBLoadTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBLoadTaskResponse) ProtoMessage() {}

func (x *DBLoadTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBLoadTaskResponse.ProtoReflect.Descriptor instead.
func (*DBLoadTaskResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{15}
}

func (x *DBLoadTaskResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBLoadTaskResponse) GetTask() *DBTaskDTO {
	if x != nil {
		return x.Task
	}
	return nil
}

type DBQueryTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType string `protobuf:"bytes,1,opt,name=taskType,proto3" json:"taskType,omitempty"`
	BizId    string `protobuf:"bytes,2,opt,name=bizId,proto3" json:"bizId,omitempty"`
}

func (x *DBQueryTaskRequest) Reset() {
	*x = DBQueryTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBQueryTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBQueryTaskRequest) ProtoMessage() {}

func (x *DBQueryTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBQueryTaskRequest.ProtoReflect.Descriptor instead.
func (*DBQueryTaskRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{16}
}

func (x *DBQueryTaskRequest) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *DBQueryTaskRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

type DBQueryTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Tasks  []*DBTaskDTO          `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *DBQueryTaskResponse) Reset() {
	*x = DBQueryTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBQueryTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBQueryTaskResponse) ProtoMessage() {}

func (x *DBQueryTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBQueryTaskResponse.ProtoReflect.Descriptor instead.
func (*DBQueryTaskResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{17}
}

func (x *DBQueryTaskResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBQueryTaskResponse) GetTasks() []*DBTaskDTO {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DBListFlowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId   string         `protobuf:"bytes,1,opt,name=bizId,proto3" json:"bizId,omitempty"`
	Keyword string         `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Status  int64          `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Page    *DBTaskPageDTO `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *DBListFlowsRequest) Reset() {
	*x = DBListFlowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListFlowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListFlowsRequest) ProtoMessage() {}

func (x *DBListFlowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListFlowsRequest.ProtoReflect.Descriptor instead.
func (*DBListFlowsRequest) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{18}
}

func (x *DBListFlowsRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *DBListFlowsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *DBListFlowsRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DBListFlowsRequest) GetPage() *DBTaskPageDTO {
	if x != nil {
		return x.Page
	}
	return nil
}

type DBListFlowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *DBTaskResponseStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Flows  []*DBFlowDTO          `protobuf:"bytes,2,rep,name=flows,proto3" json:"flows,omitempty"`
	Page   *DBTaskPageDTO        `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *DBListFlowsResponse) Reset() {
	*x = DBListFlowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBListFlowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBListFlowsResponse) ProtoMessage() {}

func (x *DBListFlowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBListFlowsResponse.ProtoReflect.Descriptor instead.
func (*DBListFlowsResponse) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{19}
}

func (x *DBListFlowsResponse) GetStatus() *DBTaskResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DBListFlowsResponse) GetFlows() []*DBFlowDTO {
	if x != nil {
		return x.Flows
	}
	return nil
}

func (x *DBListFlowsResponse) GetPage() *DBTaskPageDTO {
	if x != nil {
		return x.Page
	}
	return nil
}

type DBTaskPageDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *DBTaskPageDTO) Reset() {
	*x = DBTaskPageDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_task_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBTaskPageDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBTaskPageDTO) ProtoMessage() {}

func (x *DBTaskPageDTO) ProtoReflect() protoreflect.Message {
	mi := &file_db_task_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBTaskPageDTO.ProtoReflect.Descriptor instead.
func (*DBTaskPageDTO) Descriptor() ([]byte, []int) {
	return file_db_task_proto_rawDescGZIP(), []int{20}
}

func (x *DBTaskPageDTO) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DBTaskPageDTO) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DBTaskPageDTO) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_db_task_proto protoreflect.FileDescriptor

var file_db_task_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x62, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x44, 0x0a, 0x14, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x09, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77,
	0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe1, 0x02, 0x0a, 0x09,
	0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x13, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x54, 0x4f,
	0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x65, 0x0a, 0x14, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42,
	0x46, 0x6c, 0x6f, 0x77, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0x35, 0x0a,
	0x13, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x22, 0x65, 0x0a, 0x14, 0x44, 0x42, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44,
	0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x11, 0x44,
	0x42, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f,
	0x12, 0x1e, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77,
	0x12, 0x20, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0x4f, 0x0a, 0x13, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x6c, 0x6f,
	0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x54, 0x4f, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x22, 0x7f, 0x0a, 0x14, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x6c,
	0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x54, 0x61,
	0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x65, 0x0a, 0x14, 0x44,
	0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x42, 0x4c, 0x6f, 0x61, 0x64, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7d, 0x0a, 0x12, 0x44, 0x42, 0x4c, 0x6f, 0x61,
	0x64, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0d,
	0x66, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x42, 0x46, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x0d, 0x66, 0x6c, 0x6f, 0x77, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x42, 0x4c, 0x6f, 0x61, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x12, 0x44,
	0x42, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x22, 0x46, 0x0a, 0x12, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x44, 0x42, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x12, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x44, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x44, 0x42,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x6c,
	0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x42, 0x46, 0x6c,
	0x6f, 0x77, 0x44, 0x54, 0x4f, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x42, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x55, 0x0a, 0x0d, 0x44, 0x42, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x67, 0x65, 0x44, 0x54,
	0x4f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x64, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_task_proto_rawDescOnce sync.Once
	file_db_task_proto_rawDescData = file_db_task_proto_rawDesc
)

func file_db_task_proto_rawDescGZIP() []byte {
	file_db_task_proto_rawDescOnce.Do(func() {
		file_db_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_task_proto_rawDescData)
	})
	return file_db_task_proto_rawDescData
}

var file_db_task_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_db_task_proto_goTypes = []interface{}{
	(*DBTaskResponseStatus)(nil), // 0: DBTaskResponseStatus
	(*DBFlowDTO)(nil),            // 1: DBFlowDTO
	(*DBTaskDTO)(nil),            // 2: DBTaskDTO
	(*DBCreateFlowRequest)(nil),  // 3: DBCreateFlowRequest
	(*DBCreateFlowResponse)(nil), // 4: DBCreateFlowResponse
	(*DBCreateTaskRequest)(nil),  // 5: DBCreateTaskRequest
	(*DBCreateTaskResponse)(nil), // 6: DBCreateTaskResponse
	(*DBFlowWithTaskDTO)(nil),    // 7: DBFlowWithTaskDTO
	(*DBUpdateFlowRequest)(nil),  // 8: DBUpdateFlowRequest
	(*DBUpdateFlowResponse)(nil), // 9: DBUpdateFlowResponse
	(*DBUpdateTaskRequest)(nil),  // 10: DBUpdateTaskRequest
	(*DBUpdateTaskResponse)(nil), // 11: DBUpdateTaskResponse
	(*DBLoadFlowRequest)(nil),    // 12: DBLoadFlowRequest
	(*DBLoadFlowResponse)(nil),   // 13: DBLoadFlowResponse
	(*DBLoadTaskRequest)(nil),    // 14: DBLoadTaskRequest
	(*DBLoadTaskResponse)(nil),   // 15: DBLoadTaskResponse
	(*DBQueryTaskRequest)(nil),   // 16: DBQueryTaskRequest
	(*DBQueryTaskResponse)(nil),  // 17: DBQueryTaskResponse
	(*DBListFlowsRequest)(nil),   // 18: DBListFlowsRequest
	(*DBListFlowsResponse)(nil),  // 19: DBListFlowsResponse
	(*DBTaskPageDTO)(nil),        // 20: DBTaskPageDTO
}
var file_db_task_proto_depIdxs = []int32{
	1,  // 0: DBCreateFlowRequest.flow:type_name -> DBFlowDTO
	0,  // 1: DBCreateFlowResponse.status:type_name -> DBTaskResponseStatus
	1,  // 2: DBCreateFlowResponse.flow:type_name -> DBFlowDTO
	2,  // 3: DBCreateTaskRequest.task:type_name -> DBTaskDTO
	0,  // 4: DBCreateTaskResponse.status:type_name -> DBTaskResponseStatus
	2,  // 5: DBCreateTaskResponse.task:type_name -> DBTaskDTO
	1,  // 6: DBFlowWithTaskDTO.flow:type_name -> DBFlowDTO
	2,  // 7: DBFlowWithTaskDTO.tasks:type_name -> DBTaskDTO
	7,  // 8: DBUpdateFlowRequest.flowWithTasks:type_name -> DBFlowWithTaskDTO
	0,  // 9: DBUpdateFlowResponse.status:type_name -> DBTaskResponseStatus
	7,  // 10: DBUpdateFlowResponse.flowWithTasks:type_name -> DBFlowWithTaskDTO
	2,  // 11: DBUpdateTaskRequest.task:type_name -> DBTaskDTO
	0,  // 12: DBUpdateTaskResponse.status:type_name -> DBTaskResponseStatus
	2,  // 13: DBUpdateTaskResponse.task:type_name -> DBTaskDTO
	0,  // 14: DBLoadFlowResponse.status:type_name -> DBTaskResponseStatus
	7,  // 15: DBLoadFlowResponse.flowWithTasks:type_name -> DBFlowWithTaskDTO
	0,  // 16: DBLoadTaskResponse.status:type_name -> DBTaskResponseStatus
	2,  // 17: DBLoadTaskResponse.task:type_name -> DBTaskDTO
	0,  // 18: DBQueryTaskResponse.status:type_name -> DBTaskResponseStatus
	2,  // 19: DBQueryTaskResponse.tasks:type_name -> DBTaskDTO
	20, // 20: DBListFlowsRequest.page:type_name -> DBTaskPageDTO
	0,  // 21: DBListFlowsResponse.status:type_name -> DBTaskResponseStatus
	1,  // 22: DBListFlowsResponse.flows:type_name -> DBFlowDTO
	20, // 23: DBListFlowsResponse.page:type_name -> DBTaskPageDTO
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_db_task_proto_init() }
func file_db_task_proto_init() {
	if File_db_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBTaskResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBFlowDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBTaskDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBFlowWithTaskDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBUpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBLoadFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBLoadFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBLoadTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBLoadTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBQueryTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBQueryTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListFlowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBListFlowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_task_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBTaskPageDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_task_proto_goTypes,
		DependencyIndexes: file_db_task_proto_depIdxs,
		MessageInfos:      file_db_task_proto_msgTypes,
	}.Build()
	File_db_task_proto = out.File
	file_db_task_proto_rawDesc = nil
	file_db_task_proto_goTypes = nil
	file_db_task_proto_depIdxs = nil
}
